% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/post_to_standardize.R
\name{post_to_standardize}
\alias{post_to_standardize}
\title{POST SMILES, InChI or SDF to Retrieve Standardized Compound
  Information}
\source{
https://pubchemdocs.ncbi.nlm.nih.gov/pug-rest-tutorial
}
\usage{
post_to_standardize(x, format, json = FALSE)
}
\arguments{
\item{x}{(Character.) A SMILES, InChI or SDF as single character string.}

\item{format}{(Character.) The format of the provided string. Has to be one
of "SMILES", "InChI" or "SDF".}

\item{json}{(Logical.) Should the result be returned as JSON? Defaults to
\code{FALSE}.}
}
\value{
Returns an data frame or a character string, depending on the value
  of \code{json}.
}
\description{
This function performs a query to retrieve standardized
  compound information for a provided SMILES, InChI or SDF
}
\details{
The function performs a sanity check on the provided SMILES or
  InChI (but not SDF) and then performs a query. If successful, a data.frame
  with the following properties will be returned:  \code{"compound_id_type"},
  \code{"compound_cid"}, \code{"iupac_inchi"},
  \code{"iupac_inchikey"}, \code{"openeye_iso_smiles"}, and
  \code{"compound_parent"}.
}
\examples{
\dontrun{
x <- paste(
  "CC(=O)OC1=C(Cl)C=CC=C1C(=O)[O-]",
  "CC(=O)OC1=C(Cl)C=CC=C1C(=O)[O-]",
  "[Ca+2]",
  sep = "."
)
post_to_standardize(x, format = "SMILES")
}
}
\author{
Raoul Wolf (\url{https://github.com/RaoulWolf/})
}
